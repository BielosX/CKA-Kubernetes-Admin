apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-nginx
spec:
  replicas: 5
  selector:
    matchLabels:
      name: demo-nginx
  template:
    metadata:
      labels:
        name: demo-nginx
    spec:
      # https://aws.github.io/aws-eks-best-practices/reliability/docs/dataplane/#spread-worker-nodes-and-workload-across-multiple-azs
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: nginx-init-script
          configMap:
            name: nginx-init-script
            defaultMode: 511 # 777 oct
        - name: nginx-html
          emptyDir:
            sizeLimit: 50Mi
      initContainers:
        - name: init-script
          image: alpine:3.17
          volumeMounts:
            - mountPath: /opt/init-script
              name: nginx-init-script
            - mountPath: /usr/share/nginx/html
              name: nginx-html
          command:
            - "/bin/sh"
            - "-c"
            - "apk add --no-cache bash && /bin/bash /opt/init-script/init.sh"
      containers:
        - name: nginx
          image: nginx:1.23.0-alpine
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: nginx-html
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    name: demo-nginx
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 8080